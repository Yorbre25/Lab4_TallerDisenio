module mux_9a1 (input logic [23:0] rgb0,rgb1,rgb2,rgb3,rgb4,rgb5,rgb6,rgb7,rgb8,lineas,
					input logic visible0,visible1,visible2,visible3,visible4,visible5,visible6,visible7,visible8,visblelineas,
					output logic [7:0]r,g,b
					 );

			logic [23:0]out_mux;
			
			
			always @(visible0 or visible1 or visible2 or visible3 or visible4 or visible5 or visible6 or visible7 or visible8 or visblelineas) begin
			      case({visible0,visible1,visible2,visible3,visible4,visible5,visible6,visible7,visible8,visblelineas})
					
						10'b0000000000 : out_mux <= 24'b000000000000000000000000;
						10'b0000000001 : out_mux <= 24'b111111111111111111111111;
						10'b0000000010 : out_mux <= rgb8;
						10'b0000000100 : out_mux <= rgb7;
						10'b0000001000 : out_mux <= rgb6;
						10'b0000010000 : out_mux <= rgb5;
						10'b0000100000 : out_mux <= rgb4;
						10'b0001000000 : out_mux <= rgb3;
						10'b0010000000 : out_mux <= rgb2;
						10'b0100000000 : out_mux <= rgb1;
						10'b1000000000 : out_mux <= rgb0;
					
					endcase
			end


endmodule
